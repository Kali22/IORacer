/**
 * @defgroup car
 * Car object.
 */

/**
 *  @file
 *  @ingroup car
 *  @author Jacek ≈Åysiak <jaceklysiako.o@gmail.com>
 *  @date 3/31/17
 */
/*
#pragma once

#include <Box2D/Box2D.h>
#include <SFML/Graphics.hpp>
#include <Entity.h>
#include <CarControlE.h>

class Car : public Entity {
public:
    Car();

    ~Car();

    void Initialize(b2World *world, int x, int y);

    void CreateBody(b2World *World, int positionX, int positionY);

    void DebugPrint();

    virtual int GetEntityType();

    void Update(int state, float modifier);

    const sf::Drawable &GetSprite();

    void setCharacteristics(float maxForwardSpeed_, float maxBackwardSpeed_, float maxDriveForce_);

    const sf::Vector2f &GetPosition() const;

    float GetRotation();

    float GetSpeed();

    float maxForwardSpeed_;
    float maxBackwardSpeed_;
    float maxDriveForce_;

private:
    sf::Texture carTexture_;
    sf::Sprite carSprite_;

    b2Vec2 getLateralVelocity();

    b2Vec2 getForwardVelocity();

    void updateFriction(float modifier);

    void updateDrive(int controlState);

    void updateTurn(int controlState);

    b2Body *body_;
};

using CarPtr = std::shared_ptr<Car>;
*/